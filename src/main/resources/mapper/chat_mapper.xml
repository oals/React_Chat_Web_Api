<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.chatx_api.dao.ChatDao">

    <insert id="insertChatArchive" parameterType="com.example.chatx_api.dto.request.ChatArchiveRequestDto">

        <selectKey keyProperty="chatArchiveId" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

        INSERT INTO chat_archive (
            chat_archive_title,
            chat_archive_date,
            is_chat_archive_bookmarks,
            member_id
        ) VALUES (
            #{chatArchiveTitle},
            NOW(),
            #{isChatArchiveBookmarks},
            #{memberId}
        )
    </insert>

    <insert id="insertGroupChatRoom" parameterType="com.example.chatx_api.dto.request.GroupChatRequestDto">

        <selectKey keyProperty="groupChatRoomId" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

        INSERT INTO group_chat_room (
            group_chat_room_title,
            group_chat_room_topic,
            group_chat_room_create_date,
            member_id
        ) VALUES (
            #{groupChatRoomTitle},
            #{groupChatRoomTopic},
            NOW(),
            #{memberId}
        )
    </insert>

    <select id="selectChatArchive" parameterType="com.example.chatx_api.dto.request.ChatArchiveRequestDto" resultType="com.example.chatx_api.dto.ChatArchive">

        SELECT
            ca.chat_archive_id AS chatArchiveId,
            ca.chat_archive_title AS chatArchiveTitle,
            ca.chat_archive_date AS chatArchiveDate,
            ca.is_chat_archive_bookmarks AS isChatArchiveBookmarks
        FROM
            chat_archive ca
        WHERE
            ca.member_id = #{memberId}

        <if test="isChatArchiveBookmarks == true">
            AND ca.is_chat_archive_bookmarks = true
        </if>

        ORDER BY
            ca.chat_archive_id DESC
        LIMIT 12 OFFSET #{offset};

    </select>

    <select id="selectGroupChatRoom" parameterType="com.example.chatx_api.dto.request.GroupChatRequestDto" resultType="com.example.chatx_api.dto.GroupChatRoom">

        SELECT
            gc.group_chat_room_id AS groupChatRoomId,
            gc.group_chat_room_title AS groupChatRoomTitle,
            gc.group_chat_room_topic AS groupChatRoomTopic,
            gc.group_chat_room_create_date AS groupChatRoomCreateDate
        FROM
            group_chat_room gc
        <where>
            <if test="groupChatRoomTopic != null and groupChatRoomTopic != '전체'">
                gc.group_chat_room_topic = #{groupChatRoomTopic}
            </if>
            <if test="searchText != null and searchText != ''">
                AND REPLACE(LOWER(gc.group_chat_room_title), ' ', '') LIKE CONCAT('%', REPLACE(LOWER(#{searchText}), ' ', ''), '%')
            </if>
            <if test="groupChatRoomIdList != null and groupChatRoomIdList.size() > 0">
                AND gc.group_chat_room_id IN
                <foreach item="id" collection="groupChatRoomIdList" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>

        <if test="groupChatRoomIdList != null and groupChatRoomIdList.size() > 0">
            ORDER BY FIELD(gc.group_chat_room_id,
            <foreach item="id" collection="groupChatRoomIdList" separator=",">
                #{id}
            </foreach>
            )
        </if>


    </select>

    <select id="selectGroupChatRoomTotalCount" parameterType="com.example.chatx_api.dto.request.GroupChatRequestDto" resultType="int">

        SELECT
            COUNT(DISTINCT gc.group_chat_room_id)
        FROM
            group_chat_room gc
        <where>
            <if test="groupChatRoomTopic != null and groupChatRoomTopic != '전체'">
                gc.group_chat_room_topic = #{groupChatRoomTopic}
            </if>
            <if test="searchText != null and searchText != ''">
                AND REPLACE(LOWER(gc.group_chat_room_title), ' ', '') LIKE CONCAT('%', REPLACE(LOWER(#{searchText}), ' ', ''), '%')
            </if>
        </where>
    </select>

    <select id="selectChatArchiveTotalCount" parameterType="com.example.chatx_api.dto.request.ChatArchiveRequestDto" resultType="int">

        SELECT
            count(*)
        FROM
            chat_archive ca
        WHERE
            ca.member_id = #{memberId}

        <if test="isChatArchiveBookmarks == true">
            AND ca.is_chat_archive_bookmarks = true
        </if>

    </select>

    <update id="updateChatArchiveBookmarks" parameterType="com.example.chatx_api.dto.request.ChatArchiveRequestDto">
        UPDATE
            chat_archive ca
        SET ca.is_chat_archive_bookmarks = NOT ca.is_chat_archive_bookmarks
        WHERE
            ca.chat_archive_id = #{chatArchiveId}
    </update>

    <delete id="deleteChatArchive" parameterType="com.example.chatx_api.dto.request.ChatArchiveRequestDto">
        DELETE FROM
            chat_archive
        WHERE
            chat_archive_id = #{chatArchiveId}
    </delete>

</mapper>